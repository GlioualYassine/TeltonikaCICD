name: CI/CD for Spring Boot Application with MySQL Connection

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: List files in target directory
        run: ls -la target  # Cette étape permet de vérifier la présence du fichier .jar dans les logs

      - name: Upload JAR via SCP with Password Authentication
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.HOST }}
          username: ubuntu
          password: ${{ secrets.PASSWORD }}  # Utilisez un mot de passe si nécessaire
          port: 22
          source: "target/*.jar"
          target: "/home/ubuntu/geolocation_api.jar"

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: SSH into AWS VM and Configure MySQL Connection
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: 43.204.227.9
          username: ubuntu
          key: ${{ secrets.AWS_SSH_KEY }}  # La clé SSH ajoutée aux secrets
          port: 22
          script: |
            # Vérifier l'état de MySQL et le redémarrer si nécessaire
            sudo systemctl status mysql || sudo systemctl start mysql

            # Assurez-vous que la base de données est prête avant de démarrer l'application
            until mysql -u root -p'' -e "USE geo_location"; do
              echo "Waiting for MySQL to be ready..."
              sleep 5
            done

            # Arrêter l'ancienne instance de l'application si elle est en cours
            pgrep -f 'geolocation_api.jar' && pkill -f 'geolocation_api.jar' || echo "No running instance to stop."

            # Démarrer la nouvelle version de l'application avec les informations de connexion MySQL
            nohup java -jar /home/ubuntu/geolocation_api.jar > /home/ubuntu/geolocation_api.log 2>&1 &
